From 9a93490c3b5ea0785793bb2ffcde3c9400d58301 Mon Sep 17 00:00:00 2001
From: Robin Humble <plaguedbypenguins@gmail.com>
Date: Mon, 10 Feb 2014 03:36:29 +1100
Subject: [PATCH] Revert "Re-add legacy soft-ap for kitkat (2/2)"

This reverts commit 9229fc068f3e52626f3518eacd00f908949830e1.

diff --git a/Android.mk b/Android.mk
index 3804c2c..6042433 100644
--- a/Android.mk
+++ b/Android.mk
@@ -81,14 +81,6 @@ ifeq ($(BOARD_WLAN_NO_FWRELOAD),true)
   LOCAL_CFLAGS += -DWLAN_NO_FWRELOAD
 endif
 
-ifeq ($(USE_LEGACY_SOFTAP),true)
-  LOCAL_CFLAGS += -DLEGACY_SOFTAP
-endif
-
-ifeq ($(WIFI_DRIVER_HAS_LGE_SOFTAP),true)
-  LOCAL_CFLAGS += -DLGE_SOFTAP
-endif
-
 include $(BUILD_EXECUTABLE)
 
 include $(CLEAR_VARS)
diff --git a/CommandListener.cpp b/CommandListener.cpp
index 863b3a6..c943c55 100644
--- a/CommandListener.cpp
+++ b/CommandListener.cpp
@@ -1079,12 +1079,6 @@ int CommandListener::SoftapCmd::runCommand(SocketClient *cli,
         rc = sSoftapCtrl->stopSoftap();
     } else if (!strcmp(argv[1], "fwreload")) {
         rc = sSoftapCtrl->fwReloadSoftap(argc, argv);
-#ifdef LEGACY_SOFTAP
-    } else if (!strcmp(argv[1], "start")) {
-        rc = sSoftapCtrl->startDriver(argv[2]);
-    } else if (!strcmp(argv[1], "stop")) {
-        rc = sSoftapCtrl->stopDriver(argv[2]);
-#endif
     } else if (!strcmp(argv[1], "status")) {
         asprintf(&retbuf, "Softap service %s running",
                  (sSoftapCtrl->isSoftapStarted() ? "is" : "is not"));
diff --git a/SoftapController.cpp b/SoftapController.cpp
index f0ae73d..eedbf4a 100644
--- a/SoftapController.cpp
+++ b/SoftapController.cpp
@@ -50,20 +50,9 @@ static const char HOSTAPD_CONF_FILE[]    = "/data/misc/wifi/hostapd.conf";
 static const char HOSTAPD_BIN_FILE[]    = "/system/bin/hostapd";
 
 SoftapController::SoftapController()
-    : mPid(0) {
-#ifdef LEGACY_SOFTAP
-    mSock = socket(AF_INET, SOCK_DGRAM, 0);
-    if (mSock < 0)
-        ALOGE("Failed to open socket");
-    memset(mIface, 0, sizeof(mIface));
-#endif
-}
+    : mPid(0) {}
 
 SoftapController::~SoftapController() {
-#ifdef LEGACY_SOFTAP
-    if (mSock >= 0)
-        close(mSock);
-#endif
 }
 
 int SoftapController::startSoftap() {
@@ -73,17 +62,12 @@ int SoftapController::startSoftap() {
         ALOGE("SoftAP is already running");
         return ResponseCode::SoftapStatusResult;
     }
-#ifdef LEGACY_SOFTAP
-    if (mSock < 0) {
-        ALOGE("Softap startap - failed to open socket");
-        return -1;
-    }
-#else
+
     if ((pid = fork()) < 0) {
         ALOGE("fork failed (%s)", strerror(errno));
         return ResponseCode::ServiceStartFailed;
     }
-#endif
+
     if (!pid) {
         ensure_entropy_file_exists();
         if (execl(HOSTAPD_BIN_FILE, HOSTAPD_BIN_FILE,
@@ -94,19 +78,9 @@ int SoftapController::startSoftap() {
         ALOGE("SoftAP failed to start");
         return ResponseCode::ServiceStartFailed;
     } else {
-#ifdef LEGACY_SOFTAP
-        *mBuf = 0;
-        int ret = setCommand(mIface, "AP_BSS_START");
-        if (ret) {
-            ALOGE("Softap startap - failed: %d", ret);
-        }
-        else
-#endif
-        {
-            mPid = pid;
-            ALOGD("SoftAP started successfully");
-            usleep(AP_BSS_START_DELAY);
-        }
+        mPid = pid;
+        ALOGD("SoftAP started successfully");
+        usleep(AP_BSS_START_DELAY);
     }
     return ResponseCode::SoftapStatusResult;
 }
@@ -117,18 +91,11 @@ int SoftapController::stopSoftap() {
         ALOGE("SoftAP is not running");
         return ResponseCode::SoftapStatusResult;
     }
-#ifdef LEGACY_SOFTAP
-    if (mSock < 0) {
-        ALOGE("Softap stopap - failed to open socket");
-        return -1;
-    }
-    *mBuf = 0;
-    setCommand(mIface, "AP_BSS_STOP");
-#else
+
     ALOGD("Stopping the SoftAP service...");
     kill(mPid, SIGTERM);
     waitpid(mPid, NULL, 0);
-#endif
+
     mPid = 0;
     ALOGD("SoftAP stopped successfully");
     usleep(AP_BSS_STOP_DELAY);
@@ -142,12 +109,11 @@ bool SoftapController::isSoftapStarted() {
 /*
  * Arguments:
  *  argv[2] - wlan interface
- *  ARGV[3] - SOFTAP INTERFACE
- *  argv[4] - SSID
- *  argv[5] - Broadcast/Hidden
- *  argv[6] - Channel
- *  argv[7] - Security
- *  argv[8] - Key
+ *  argv[3] - SSID
+ *  argv[4] - Broadcast/Hidden
+ *  argv[5] - Channel
+ *  argv[6] - Security
+ *  argv[7] - Key
  */
 int SoftapController::setSoftap(int argc, char *argv[]) {
     char psk_str[2*SHA256_DIGEST_LENGTH+1];
@@ -158,30 +124,18 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
     int channel = AP_CHANNEL_DEFAULT;
     char *wbuf = NULL;
     char *fbuf = NULL;
-    char *iface = NULL;
 
-    if (argc < 6) {
+    if (argc < 5) {
         ALOGE("Softap set is missing arguments. Please use:");
-        ALOGE("softap <wlan iface> <softap iface> <SSID> <hidden/broadcast> <channel> <wpa2?-psk|open> <passphrase>");
+        ALOGE("softap <wlan iface> <SSID> <hidden/broadcast> <channel> <wpa2?-psk|open> <passphrase>");
         return ResponseCode::CommandSyntaxError;
     }
 
-#ifdef LEGACY_SOFTAP
-    if (mSock < 0) {
-        ALOGE("Softap set - failed to open socket");
-        return -1;
-    }
-#endif
-    iface = argv[2 /* The first index for wlan iface, don't change */];
-#ifdef LEGACY_SOFTAP
-    strncpy(mIface, argv[3], sizeof(mIface));
-#endif
-#ifndef LEGACY_SOFTAP
-    if (!strcasecmp(argv[5], "hidden"))
+    if (!strcasecmp(argv[4], "hidden"))
         hidden = 1;
 
-    if (argc >= 6) {
-        channel = atoi(argv[6]);
+    if (argc >= 5) {
+        channel = atoi(argv[5]);
         if (channel <= 0)
             channel = AP_CHANNEL_DEFAULT;
     }
@@ -193,20 +147,20 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
             "/data/misc/wifi/hostapd\nssid=%s\nchannel=%d\nieee80211n=1\n"
 #endif
             "hw_mode=g\nignore_broadcast_ssid=%d\n",
-            iface, argv[4], channel, hidden);
+            argv[2], argv[3], channel, hidden);
 
-    if (argc > 8) {
-        if (!strcmp(argv[7], "wpa-psk")) {
-            generatePsk(argv[4], argv[8], psk_str);
+    if (argc > 7) {
+        if (!strcmp(argv[6], "wpa-psk")) {
+            generatePsk(argv[3], argv[7], psk_str);
             asprintf(&fbuf, "%swpa=1\nwpa_pairwise=TKIP CCMP\nwpa_psk=%s\n", wbuf, psk_str);
-        } else if (!strcmp(argv[7], "wpa2-psk")) {
-            generatePsk(argv[4], argv[8], psk_str);
+        } else if (!strcmp(argv[6], "wpa2-psk")) {
+            generatePsk(argv[3], argv[7], psk_str);
             asprintf(&fbuf, "%swpa=2\nrsn_pairwise=CCMP\nwpa_psk=%s\n", wbuf, psk_str);
-        } else if (!strcmp(argv[7], "open")) {
+        } else if (!strcmp(argv[6], "open")) {
             asprintf(&fbuf, "%s", wbuf);
         }
-    } else if (argc > 7) {
-        if (!strcmp(argv[7], "open")) {
+    } else if (argc > 6) {
+        if (!strcmp(argv[6], "open")) {
             asprintf(&fbuf, "%s", wbuf);
         }
     } else {
@@ -245,49 +199,6 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
     }
 
     close(fd);
-#else
-    /* Create command line */
-    /* system("iwpriv eth0 WL_AP_CFG ASCII_CMD=AP_CFG,SSID=\"AndroidAP\",SEC=\"open\",KEY=12345,CHANNEL=1,PREAMBLE=0,MAX_SCB=8,END"); */
-    i = addParam(i, "ASCII_CMD", "AP_CFG");
-    i = addParam(i, "SSID", argv[4]);
-
-    if (argc > 7) {
-        i = addParam(i, "SEC", argv[7]);
-    } else {
-        i = addParam(i, "SEC", "open");
-    }
-
-    if (argc > 8) {
-        generatePsk(argv[4], argv[8], psk_str);
-        i = addParam(i, "KEY", psk_str);
-    } else {
-        i = addParam(i, "KEY", "12345678");
-    }
-
-    if (argc > 6) {
-        i = addParam(i, "CHANNEL", argv[6]);
-    } else {
-        i = addParam(i, "CHANNEL", "6");
-    }
-
-    i = addParam(i, "PREAMBLE", "0");
-    i = addParam(i, "MAX_SCB", "8");
-
-    if ((i < 0) || ((unsigned)(i + 4) >= sizeof(mBuf))) {
-        ALOGE("Softap set - command is too big");
-        return i;
-    }
-    sprintf(&mBuf[i], "END");
-
-    ret = setCommand(iface, "AP_SET_CFG");
-    if (ret) {
-        ALOGE("Softap set - failed: %d", ret);
-    }
-    else {
-        ALOGD("Softap set - Ok");
-        usleep(AP_SET_CFG_DELAY);
-    }
-#endif
     return ret;
 }
 
@@ -302,16 +213,7 @@ int SoftapController::fwReloadSoftap(int argc, char *argv[])
     return 0;
 #endif
     int i = 0;
-    int ret = 0;
     char *fwpath = NULL;
-#ifdef LEGACY_SOFTAP
-    char *iface;
-
-    if (mSock < 0) {
-        ALOGE("Softap set - failed to open socket");
-        return -1;
-    }
-#endif
 
     if (argc < 4) {
         ALOGE("SoftAP fwreload is missing arguments. Please use: softap <wlan iface> <AP|P2P|STA>");
@@ -327,14 +229,7 @@ int SoftapController::fwReloadSoftap(int argc, char *argv[])
     }
     if (!fwpath)
         return ResponseCode::CommandParameterError;
-#ifdef LEGACY_SOFTAP
-    iface = argv[2];
-    sprintf(mBuf, "FW_PATH=%s", fwpath);
-    ret = setCommand(iface, "WL_FW_RELOAD");
-    if (ret) {
-#else
     if (wifi_change_fw_path((const char *)fwpath)) {
-#endif
         ALOGE("Softap fwReload failed");
         return ResponseCode::OperationFailed;
     }
@@ -355,148 +250,3 @@ void SoftapController::generatePsk(char *ssid, char *passphrase, char *psk_str)
         sprintf(&psk_str[j*2], "%02x", psk[j]);
     }
 }
-
-#ifdef LEGACY_SOFTAP
-int SoftapController::addParam(int pos, const char *cmd, const char *arg)
-{
-    if (pos < 0)
-        return pos;
-
-    if ((unsigned)(pos + strlen(cmd) + strlen(arg) + 1) >= sizeof(mBuf)) {
-        ALOGE("Command line is too big");
-        return -1;
-    }
-
-    pos += sprintf(&mBuf[pos], "%s=%s,", cmd, arg);
-    return pos;
-}
-
-int SoftapController::setCommand(char *iface, const char *fname, unsigned buflen) {
-    char tBuf[SOFTAP_MAX_BUFFER_SIZE];
-    struct iwreq wrq;
-    struct iw_priv_args *priv_ptr;
-    int i, j, ret;
-    int cmd = 0, sub_cmd = 0;
-
-    strncpy(wrq.ifr_name, iface, sizeof(wrq.ifr_name));
-    wrq.u.data.pointer = tBuf;
-    wrq.u.data.length = sizeof(tBuf) / sizeof(struct iw_priv_args);
-    wrq.u.data.flags = 0;
-    if ((ret = ioctl(mSock, SIOCGIWPRIV, &wrq)) < 0) {
-        ALOGE("SIOCGIPRIV failed: %d", ret);
-        return ret;
-    }
-
-    priv_ptr = (struct iw_priv_args *)wrq.u.data.pointer;
-    for(i=0; i < wrq.u.data.length;i++) {
-        if (strcmp(priv_ptr[i].name, fname) == 0) {
-            cmd = priv_ptr[i].cmd;
-            break;
-        }
-    }
-
-    if (i == wrq.u.data.length) {
-        ALOGE("iface:%s, fname: %s - function not supported", iface, fname);
-        return -1;
-    }
-
-    if (cmd < SIOCDEVPRIVATE) {
-        for(j=0; j < i; j++) {
-            if ((priv_ptr[j].set_args == priv_ptr[i].set_args) &&
-                (priv_ptr[j].get_args == priv_ptr[i].get_args) &&
-                (priv_ptr[j].name[0] == '\0'))
-                break;
-        }
-        if (j == i) {
-            ALOGE("iface:%s, fname: %s - invalid private ioctl", iface, fname);
-            return -1;
-        }
-        sub_cmd = cmd;
-        cmd = priv_ptr[j].cmd;
-    }
-
-    strncpy(wrq.ifr_name, iface, sizeof(wrq.ifr_name));
-    if ((buflen == 0) && (*mBuf != 0))
-        wrq.u.data.length = strlen(mBuf) + 1;
-    else
-        wrq.u.data.length = buflen;
-    wrq.u.data.pointer = mBuf;
-    wrq.u.data.flags = sub_cmd;
-    ret = ioctl(mSock, cmd, &wrq);
-    return ret;
-}
-
-int SoftapController::startDriver(char *iface) {
-    int ret = 0;
-
-    if (mSock < 0) {
-        ALOGE("Softap driver start - failed to open socket");
-        return -1;
-    }
-
-    if (!iface || (iface[0] == '\0')) {
-        ALOGD("Softap driver start - wrong interface");
-        iface = mIface;
-    }
-
-    *mBuf = 0;
-
-#ifdef LGE_SOFTAP
-    ret = setCommand(iface, "START-SOFTAP");
-#else
-    ret = setCommand(iface, "START");
-#endif
-
-    if (ret < 0) {
-        ALOGE("Softap driver start: %d", ret);
-        return ret;
-    }
-
-    usleep(AP_DRIVER_START_DELAY);
-    ALOGD("Softap driver start");
-    return ret;
-}
-
-int SoftapController::stopDriver(char *iface) {
-    int ret = 0;
-
-    if (mSock < 0) {
-        ALOGE("Softap driver stop - failed to open socket");
-        return -1;
-    }
-    if (!iface || (iface[0] == '\0')) {
-        ALOGD("Softap driver stop - wrong interface");
-        iface = mIface;
-    }
-    *mBuf = 0;
-
-#ifdef LGE_SOFTAP
-    ret = setCommand(iface, "STOP-SOFTAP");
-#else
-    ret = setCommand(iface, "STOP");
-#endif
-
-    ALOGD("Softap driver stop: %d", ret);
-    return ret;
-}
-
-int SoftapController::clientsSoftap(char **retbuf)
-{
-    int ret;
-
-    if (mSock < 0) {
-        ALOGE("Softap clients - failed to open socket");
-        return -1;
-    }
-    *mBuf = 0;
-    ret = setCommand(mIface, "AP_GET_STA_LIST", SOFTAP_MAX_BUFFER_SIZE);
-    if (ret) {
-        ALOGE("Softap clients - failed: %d", ret);
-    } else {
-        asprintf(retbuf, "Softap clients:%s", mBuf);
-        ALOGD("Softap clients:%s", mBuf);
-    }
-    return ret;
-}
-
-#endif
diff --git a/SoftapController.h b/SoftapController.h
index f00f98c..15563be 100644
--- a/SoftapController.h
+++ b/SoftapController.h
@@ -28,18 +28,6 @@
 #define AP_CHANNEL_DEFAULT	6
 
 class SoftapController {
-#ifdef LEGACY_SOFTAP
-     char mBuf[SOFTAP_MAX_BUFFER_SIZE];
-     char mIface[IFNAMSIZ];
-     int mSock;
-
-     int addParam(int pos, const char *cmd, const char *arg);
-     int setCommand(char *iface, const char *fname, unsigned buflen=0);
-public:
-     int clientsSoftap(char **retbuf);
-     int startDriver(char *iface);
-     int stopDriver(char *iface);
-#endif
 public:
     SoftapController();
     virtual ~SoftapController();
