From f386f2b898dca6d609f3dc59349962477cf59f2e Mon Sep 17 00:00:00 2001
From: Grigori Goronzy <greg@blackbox>
Date: Mon, 28 Jan 2013 06:44:58 +0100
Subject: [PATCH] Prefer 16bpp formats for opaque bitmaps

Configure BitmapFactory to prefer RGB565, which will make it
use that format for all opaque assets loaded by it with standard
settings. Toggle dithering flag in strategic places and reenable
16bpp drawing cache, to speed up software UI rendering.

This generally helps with reducing memory consumption on legacy
devices, and usually does not result in reduced visual quality.

Change-Id: Id1b7e0529461d23213e31c25b74d4da5d08f0855

diff --git a/core/java/android/view/ViewRootImpl.java b/core/java/android/view/ViewRootImpl.java
index bc0d7e3..e7acd80 100644
--- a/core/java/android/view/ViewRootImpl.java
+++ b/core/java/android/view/ViewRootImpl.java
@@ -1203,7 +1203,7 @@ public final class ViewRootImpl implements ViewParent,
             // We used to use the following condition to choose 32 bits drawing caches:
             // PixelFormat.hasAlpha(lp.format) || lp.format == PixelFormat.RGBX_8888
             // However, windows are now always 32 bits by default, so choose 32 bits
-            attachInfo.mUse32BitDrawingCache = true;
+            attachInfo.mUse32BitDrawingCache = PixelFormat.formatHasAlpha(lp.format) || lp.format == PixelFormat.RGBX_8888;
             attachInfo.mHasWindowFocus = false;
             attachInfo.mWindowVisibility = viewVisibility;
             attachInfo.mRecomputeGlobalAttributes = false;
diff --git a/graphics/java/android/graphics/Bitmap.java b/graphics/java/android/graphics/Bitmap.java
index 8c38d25..80545cb 100644
--- a/graphics/java/android/graphics/Bitmap.java
+++ b/graphics/java/android/graphics/Bitmap.java
@@ -722,6 +722,7 @@ public final class Bitmap implements Parcelable {
             canvas.concat(m);
 
             paint = new Paint();
+            paint.setDither(true);
             paint.setFilterBitmap(filter);
             if (transformed) {
                 paint.setAntiAlias(true);
diff --git a/graphics/java/android/graphics/BitmapFactory.java b/graphics/java/android/graphics/BitmapFactory.java
index b08ce09..df05063 100644
--- a/graphics/java/android/graphics/BitmapFactory.java
+++ b/graphics/java/android/graphics/BitmapFactory.java
@@ -41,7 +41,7 @@ public class BitmapFactory {
          * the same result from the decoder as if null were passed.
          */
         public Options() {
-            inDither = false;
+            inDither = true;
             inScaled = true;
             inPremultiplied = true;
         }
@@ -136,7 +136,7 @@ public class BitmapFactory {
          * Image are loaded with the {@link Bitmap.Config#ARGB_8888} config by
          * default.
          */
-        public Bitmap.Config inPreferredConfig = Bitmap.Config.ARGB_8888;
+        public Bitmap.Config inPreferredConfig = Bitmap.Config.RGB_565;
 
         /**
          * If true (which is the default), the resulting bitmap will have its
